#!/usr/bin/env ruby
# encoding: utf-8
require 'RMagick'
require 'optparse'
include Magick

resize = nil
delay = nil
optparser = OptionParser.new do |opts|
  opts.banner = "Uso: gifeameesta [options] input final.gif"

  opts.on '-h', '--help', 'Cómo usar este programa' do
    puts opts
    exit
  end

  opts.on '-s pixels', '--size pixels', "Redimensionar imagen a `pixels` pixeles máximo" do |pixels|
    begin
      resize = pixels.to_i
    rescue Exception# => e
      puts "No pude convertir -s #{pixels} a un número entero"
      exit 1
    end
  end

  opts.on '-d seconds', '--delay seconds', "Delay entre cada imagen, por default: .5s" do |time|
    begin
      delay = time.to_f * 100
    rescue Exception# => e
      puts "No pude convertir -d #{time} a un número entero"
      exit 1
    end

  end

  if ARGV.length == 0
    puts opts.help()
    exit 0
  end

end

options = optparser.parse!

args = ARGV.dup

final_file = args.pop
files = args

case files.length
when 0
  puts "Necesito algo que procesar!"
  puts optparser
  exit 1
when 1
  files = Dir["#{options[0]}/*.jpg"]
  puts "Procesando directorio..."
else
  puts "Procesando imágenes"
end

files = files.map {|f| File.realpath(f) }

list = ImageList.new(*files)
list.delay = delay || 50

if resize
  list.each do |i|
    i.resize_to_fit!(resize, resize)
  end
end

list.write(final_file)